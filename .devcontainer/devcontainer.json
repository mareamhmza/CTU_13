{
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler
from sklearn.decomposition import PCA

# Creating a sample dataset
data = {
    'Student_ID': range(1, 21),
    'Math_Score': np.random.randint(50, 100, 20).astype(float),  # Convert to float to support NaN
    'English_Score': np.random.randint(50, 100, 20).astype(float),  # Convert to float to support NaN
    'Science_Score': np.random.randint(50, 100, 20).astype(float)  # Convert to float to support NaN
}

# Introduce some missing values
data['Math_Score'][3] = np.nan
data['English_Score'][8] = np.nan
data['Science_Score'][15] = np.nan

df = pd.DataFrame(data)

# Display the dataset with missing values
print("Sample Dataset with Missing Values:")
print(df)

# Handling missing values (e.g., using mean imputation)
df.fillna(df.mean(), inplace=True)

# Display the dataset after filling missing values
print("\nSample Dataset after Handling Missing Values:")
print(df)

# Normalization (e.g., min-max scaling)
scaler = MinMaxScaler()
df[['Math_Score', 'English_Score', 'Science_Score']] = scaler.fit_transform(df[['Math_Score', 'English_Score', 'Science_Score']])
df[['Math_Score', 'English_Score', 'Science_Score']] *= 100
